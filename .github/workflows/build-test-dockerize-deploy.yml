name: Build and test with Gradle

on:
  [push]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  
jobs:
  build_and_test:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Make Gradle Executable
        run: chmod +x ./gradlew
        
      - name: Run Tests
        run: ./gradlew test --tests *com*
      - name: Generate Bootable Jar
        run: |
          ./gradlew bootJar

  run_integration_test:
    needs: build_and_test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
          java-version: '17'
          distribution: 'temurin'
          
    - name: Make Gradle Executable
      run: chmod +x ./gradlew
    - name: Start Application
      run: |
          ./gradlew bootRun &
          sleep 30
    - name: Run IntegrationTest tests
      run: ./gradlew test --tests *integration*
    - name: Stop Application
      run: |
        pkill -f "CalculatorApplication"
    
  build-and-push-image:
    needs: run_integration_test
    runs-on: ubuntu-latest
    permissions:
          contents: read
          packages: write
    steps: 

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Make Gradle Executable
        run: chmod +x ./gradlew
     
      - name: Generate Bootable Jar
        run: |
          ./gradlew bootJar 
      
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
            registry: ${{ env.REGISTRY }}
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}
  
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
            images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
            tags: |
              type=ref,event=branch
              type=sha
  
      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
            context: .
            push: true
            tags: ${{ steps.meta.outputs.tags }}
            labels: ${{ steps.meta.outputs.labels }}
  deploy_simulation:
    needs: build-and-push-image
    runs-on: ubuntu-latest
    steps:
      - name: Echo Image Name
        run: |
            echo "Deploying image: ghcr.io/${{ github.repository }}:${{ github.ref_name }}"
